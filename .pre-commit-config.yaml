# Pre-commit configuration â€” rules-106 v1.1
# Updated 2025-07-12

repos:
  # ---------------- Python ----------------
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.12.3
    hooks:
      - id: ruff
        name: ruff-lint
        args: [--fix, --exit-non-zero-on-fix]
        types: [python]
      - id: ruff-format
        name: ruff-format
        # formatter only; no args needed
        types: [python]

  - repo: https://github.com/psf/black
    rev: 25.1.0
    hooks:
      - id: black
        name: black-format
        language_version: python3.11
        types: [python]

  - repo: https://github.com/pycqa/isort
    rev: 6.0.1
    hooks:
      - id: isort
        name: isort-imports
        args: ["--profile", "black", "--check-only", "--diff"]
        types: [python]

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.16.1
    hooks:
      - id: mypy
        name: mypy-type-check
        additional_dependencies:
          - pydantic
          - pydantic-ai
          - fastapi
          - types-requests
          - types-redis
        args: [--strict, --ignore-missing-imports]
        types: [python]

  - repo: https://github.com/pycqa/bandit
    rev: 1.8.6
    hooks:
      - id: bandit
        name: bandit-security
        args: ["-r", "src/", "-f", "json", "-o", ".linting/reports/bandit-report.json"]
        types: [python]
        # comment the next line if you *do* want it locally
        always_run: false

  - repo: https://github.com/pycqa/pydocstyle
    rev: 6.3.0
    hooks:
      - id: pydocstyle
        name: pydocstyle-docstrings
        args: [--convention=pep257]
        types: [python]

  - repo: https://github.com/jendrikseipp/vulture
    rev: v2.13
    hooks:
      - id: vulture
        name: vulture-dead-code
        args: [--min-confidence=80]
        types: [python]
        always_run: false

  # ------------- General file checks -------------
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: trailing-whitespace
        name: trim-whitespace
      - id: end-of-file-fixer
        name: fix-eof
      - id: check-yaml
        name: check-yaml-syntax
      - id: check-json
        name: check-json-syntax
      - id: check-toml
        name: check-toml-syntax
      - id: check-merge-conflict
        name: check-merge-conflicts
      - id: check-added-large-files
        name: check-large-files
        args: ["--maxkb=1000"]
      - id: check-case-conflict
        name: check-case-conflicts
      - id: check-executables-have-shebangs
        name: check-shebangs
      - id: check-shebang-scripts-are-executable
        name: check-executable-shebangs

  # -------------- Dockerfile ----------------
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint-docker
        name: hadolint-dockerfile
        args: ["--ignore", "DL3008", "--ignore", "DL3009"]

  # -------------- YAML ----------------
  - repo: https://github.com/adrienverge/yamllint
    rev: v1.35.1
    hooks:
      - id: yamllint
        name: yamllint-yaml
        # Use built-in relaxed config if file absent
        args: ["-d", "{extends: relaxed, rules: {line-length: {max: 120}}}"]

  # -------------- Markdown ----------------
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.42.0
    hooks:
      - id: markdownlint
        name: markdownlint-md
        # falls back to default rules if local config missing
        args: ["--disable", "MD013"]  # disable long-line rule

  # -------------- Shell ----------------
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.10.0.1
    hooks:
      - id: shellcheck
        name: shellcheck-shell
        args: ["--severity=warning"]

  # -------------- Safety ----------------
  - repo: local
    hooks:
      - id: safety
        name: safety-vulnerabilities
        entry: safety check --full-report
        language: system
        types: [python]
        always_run: false    # heavy, keep for CI if wanted

# ---- CI integration (pre-commit.ci) ----
ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: '[pre-commit.ci] autoupdate'
  autoupdate_schedule: weekly
  # heavy checks only on demand
  skip: [mypy, bandit, safety, vulture]
  submodules: false
