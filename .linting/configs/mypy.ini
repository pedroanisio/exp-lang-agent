# mypy configuration following rules-106 v1.0
# Static type checking for Python

[mypy]
# Python version and platform
python_version = 3.11
platform = linux

# Import discovery
mypy_path = src
packages = linguistics_agent
namespace_packages = True

# Strict mode configuration
strict = True
warn_return_any = True
warn_unused_configs = True
warn_redundant_casts = True
warn_unused_ignores = True
warn_no_return = True
warn_unreachable = True

# Error output
show_error_codes = True
show_column_numbers = True
show_error_context = True
pretty = True
color_output = True
error_summary = True

# Incremental mode
incremental = True
cache_dir = .mypy_cache

# Import handling
ignore_missing_imports = False
follow_imports = normal
follow_imports_for_stubs = True

# Disallow dynamic typing
disallow_any_unimported = True
disallow_any_expr = False  # Too strict for AI/ML code
disallow_any_decorated = False
disallow_any_explicit = False
disallow_any_generics = True
disallow_subclassing_any = True

# Untyped definitions
disallow_untyped_calls = True
disallow_untyped_defs = True
disallow_incomplete_defs = True
check_untyped_defs = True
disallow_untyped_decorators = True

# None and Optional handling
no_implicit_optional = True
strict_optional = True

# Warnings
warn_unused_ignores = True
warn_no_return = True
warn_return_any = True
warn_unreachable = True

# Miscellaneous strictness flags
strict_equality = True
strict_concatenate = True

# Configuring error messages
show_error_codes = True
show_column_numbers = True

# Per-module configuration
[mypy-tests.*]
# Relax some rules for tests
disallow_untyped_defs = False
disallow_incomplete_defs = False
disallow_untyped_calls = False

[mypy-anthropic.*]
# Third-party library with good typing
ignore_missing_imports = False

[mypy-pydantic_ai.*]
# Third-party library with good typing
ignore_missing_imports = False

[mypy-neo4j.*]
# Third-party library - may need to ignore missing imports
ignore_missing_imports = True

[mypy-chromadb.*]
# Third-party library - may need to ignore missing imports
ignore_missing_imports = True

[mypy-redis.*]
# Third-party library with typing
ignore_missing_imports = False

[mypy-fastapi.*]
# Third-party library with excellent typing
ignore_missing_imports = False

[mypy-pydantic.*]
# Third-party library with excellent typing
ignore_missing_imports = False

[mypy-pytest.*]
# Testing framework
ignore_missing_imports = False

[mypy-uvicorn.*]
# ASGI server
ignore_missing_imports = True

[mypy-alembic.*]
# Database migrations
ignore_missing_imports = True

[mypy-sqlalchemy.*]
# ORM with complex typing
ignore_missing_imports = False

# AI/ML libraries that may have incomplete typing
[mypy-transformers.*]
ignore_missing_imports = True

[mypy-torch.*]
ignore_missing_imports = True

[mypy-numpy.*]
ignore_missing_imports = False

[mypy-pandas.*]
ignore_missing_imports = False

# Document processing libraries
[mypy-pypdf.*]
ignore_missing_imports = True

[mypy-pdfplumber.*]
ignore_missing_imports = True

[mypy-beautifulsoup4.*]
ignore_missing_imports = True

[mypy-requests.*]
ignore_missing_imports = False

[mypy-httpx.*]
ignore_missing_imports = False

# ANTLR runtime
[mypy-antlr4.*]
ignore_missing_imports = True

